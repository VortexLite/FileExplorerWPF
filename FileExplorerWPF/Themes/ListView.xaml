<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:prop="clr-namespace:FileExplorerWPF.Properties">
    <Style x:Key="TileViewItemStyle"
        TargetType="{x:Type ListViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinHeight" Value="50"/>
        <Setter Property="Content" Value="{Binding Name}"/>
        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, 
            UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="Width" Value="80"/>
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Grid Background="{TemplateBinding Background}">
                        <Border x:Name="bgBorder"
                                Grid.ColumnSpan="3"
                                BorderBrush="#909094"
                                BorderThickness="1"
                                Opacity=".2"
                                Visibility="Collapsed">
                            <Rectangle Fill="#f9fdff"
                                       Opacity=".2"/>
                        </Border>
                        <Grid Margin="5"
                              VerticalAlignment="Top">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <Path
                                x:Name="Path"
                                Data="{Binding FileIcon}"
                                Stretch="Uniform"
                                Fill="{TemplateBinding Foreground}"
                                HorizontalAlignment="Center"/>

                            <ContentPresenter
                                x:Name="ContentPresenter"
                                Grid.Row="1"
                                Margin="0,6,0,0"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="Center">
                                <ContentPresenter.Resources>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Setter Property="TextWrapping" Value="WrapWithOverflow" />
                                        <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                        <Setter Property="TextAlignment" Value="Center"/>
                                    </Style>
                                </ContentPresenter.Resources>
                            </ContentPresenter>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="bgBorder" Property="Opacity" Value=".5"/>
                            <Setter TargetName="bgBorder" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bgBorder" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <DataTrigger
                            Binding="{Binding IsHidden, UpdateSourceTrigger=PropertyChanged}"
                            Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>

                        <DataTrigger
                            Binding="{Binding DarkMode, Source={x:Static prop:Settings.Default}}"
                            Value="True">
                            <Setter Property="Foreground" Value="#8a8b8a"/>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding DarkMode, Source={x:Static prop:Settings.Default}}"
                                           Value="True"/>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                           Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground"
                                    Value="#8a8b8a"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <GridView x:Key="ListViewStyle"
        AllowsColumnReorder="True">
        <GridViewColumn
            Header="Name"
            DisplayMemberBinding="{Binding Name, UpdateSourceTrigger=PropertyChanged}"
            Width="200"/>
        <GridViewColumn
            Header="Type"
            DisplayMemberBinding="{Binding Type, UpdateSourceTrigger=PropertyChanged}"
            Width="80"/>
        <GridViewColumn
            Header="Data Modified"
            DisplayMemberBinding="{Binding DateModified, UpdateSourceTrigger=PropertyChanged}"
            Width="140"/>
        <GridViewColumn
            Header="Size"
            DisplayMemberBinding="{Binding Size, TargetNullValue='Calculating Size...', FallbackValue='Calculating Size',
            UpdateSourceTrigger=PropertyChanged}"/>
    </GridView>

    <Style TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="#acabae"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Command" Value="{Binding SortFilesCommand}"/>
        <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource Self}}"/>
        <Setter Property="MinHeight" Value="28"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Margin="8 0 ">
                            <TextBlock
                                x:Name="ContentHeader"
                                HorizontalAlignment="Left"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Text="{TemplateBinding Content}"/>

                            <Path
                                x:Name="Path"
                                HorizontalAlignment="Right"
                                Data="{DynamicResource SortUp}"
                                Fill="{TemplateBinding Foreground}"
                                Stretch="Uniform"
                                Visibility="Collapsed"
                                Width="10"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter TargetName="Path" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <DataTrigger
                            Binding="{Binding DarkMode, Source={x:Static prop:Settings.Default}}"
                            Value="True">
                            <Setter Property="Foreground" Value="#fafafa"/>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding DarkMode, Source={x:Static prop:Settings.Default}}"
                                           Value="True"/>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                           Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground"
                                    Value="#2c2b2c"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="ListViewItemStyle"
        TargetType="{x:Type ListViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, 
            UpdateSourceTrigger=PropertyChanged}"/>
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Foreground" Value="#202020" />
        <Setter Property="ToolTip">
            <Setter.Value>
                <TextBlock>
                    <Run Text="{Binding Type, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <Run Text="created on:"/>
                    <Run Text="{Binding CreatedOn, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <LineBreak/>
                    <Run Text="{Binding Type, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <Run Text="created on:"/>
                    <Run Text="{Binding Size, TargetNullValue='Calculating Size...', FallbackValue='Calculating Size',
            UpdateSourceTrigger=PropertyChanged}"/>
                </TextBlock>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Grid Background="{TemplateBinding Background}">

                        <GridViewRowPresenter
                            Content="{TemplateBinding Content}"
                            Columns="{TemplateBinding GridView.ColumnCollection}"/>
                        <Border x:Name="bgBorder"
                                Grid.ColumnSpan="3"
                                BorderBrush="#909094"
                                BorderThickness="1"
                                Opacity=".2"
                                Visibility="Collapsed">
                            <Rectangle Fill="#f9fdff"
                                       Opacity=".2"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="bgBorder" Property="Opacity" Value=".5"/>
                            <Setter TargetName="bgBorder" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="bgBorder" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <DataTrigger
                            Binding="{Binding IsHidden, UpdateSourceTrigger=PropertyChanged}"
                            Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>

                        <Trigger Property="ScrollViewer.VerticalScrollBarVisibility"
                                 Value="Visible">
                            <Setter TargetName="bgBorder" Property="Margin" Value="0 0 0 5"/>
                        </Trigger>

                        <DataTrigger
                            Binding="{Binding DarkMode, Source={x:Static prop:Settings.Default}}"
                            Value="True">
                            <Setter Property="Foreground" Value="#8a8b8a"/>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding DarkMode, Source={x:Static prop:Settings.Default}}"
                                           Value="True"/>
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}"
                                           Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Foreground"
                                    Value="#8a8b8a"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListView">
        <Setter Property="View" Value="{DynamicResource ListViewStyle}"/>
        <Setter Property="ItemContainerStyle"
                Value="{DynamicResource ListViewItemStyle}"/>

        <Style.Triggers>
            <DataTrigger Binding="{Binding IsListView, UpdateSourceTrigger=PropertyChanged}" Value="False">
                <Setter Property="ItemContainerStyle" Value="{StaticResource TileViewItemStyle}"/>
                <Setter Property="View" Value="{x:Null}"/>
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <WrapPanel/>
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>